server:
  port: 8080
spring:
  datasource:
    #url: jdbc:log4jdbc:mysql://192.168.17.128:3306/jpa?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC
    #url: jdbc:h2:file:./datasource/h2/jpa;AUTO_SERVER=TRUE
    #url: jdbc:log4jdbc:h2:file:./datasource/h2/jpa
    url: jdbc:log4jdbc:h2:tcp://localhost/./datasource/h2/jpa;AUTO_SERVER=TRUE
    username: sa
    password:
    #driver-class-name: org.h2.Driver
    driver-class-name: net.sf.log4jdbc.sql.jdbcapi.DriverSpy
    #driver-class-name: com.mysql.jdbc.Driver
    type: com.alibaba.druid.pool.DruidDataSource
    #type: org.apache.tomcat.jdbc.pool.DataSource
    #type: com.zaxxer.hikari.HikariDataSource
    #type: org.apache.commons.dbcp.BasicDataSource
    #type: org.apache.commons.dbcp2.BasicDataSource

  jpa:
    hibernate:
      ddl-auto: none
      naming:
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
    show-sql: false
    generate-ddl: false
    properties:
      hibernate.show_sql: true
      hibernate.format_sql: false
      hibernate.use_sql_comments: false
      hibernate.jdbc.time_zone: Asia/Shanghai #除非指定，否则JDBC驱动程序使用默认的JVM时区。如果通过此设置配置了不同的时区，JDBC PreparedStatement\setTimestamp将根据指定的时区使用日历实例
    database-platform: org.hibernate.dialect.H2Dialect
    #database-platform: org.hibernate.dialect.MySQL5Dialect

    open-in-view: false # 禁用在视图层仍然可以获取懒加载数据,默认SpringMVC是开启状态,会影响性能.
  main:
    allow-bean-definition-overriding: true
  profiles:
    active: test
  liquibase:
    contexts: test
    drop-first: false
    enabled: true
  data:
    mongodb:
      #uri: mongodb://192.168.17.128:27017/jpa
      database: jpa
      host: 127.0.0.1
      port: 27017
      #username: admin
      #password: admin
    redis:
      repositories:
        #禁用redis作为Jpa的缓存数据库,后面考虑redis使用Spring框架提供的缓存管理器
        enabled: false
  redis:
    lettuce:
      pool:
        max-active: 8
        max-wait: 10
        min-idle: 0
        max-idle: 4
      shutdown-timeout: 100
    host: 127.0.0.1
    port: 6379
    #password: 123456
    database: 0
  rabbitmq:
    host: 192.168.17.128
    port: 5672
    username: guest
    password: guest
    virtual-host: /
jhipster:
  # CORS is only enabled by default with the "dev" profile, so BrowserSync can access the API
  cors:
    allowed-origins: "*"
    allowed-methods: "*"
    allowed-headers: "*"
    exposed-headers: "Authorization,Link,X-Total-Count"
    allow-credentials: true
    max-age: 1800
  async:
    core-pool-size: 2
    max-pool-size: 50
    queue-capacity: 10000
  security:
    remember-me:
      # security key (this key should be unique for your application, and kept secret)
      key: 4e431fe0f41cec2457ba464d1fa53d2e287a54e5e92c9dca30c68d95af40e1bbc2cc4d3d25f0f61049dc3934466e6586a8eb
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: RFE2Y1NNTlRsRDNDLzJiblVQRnZMYUZ4WXVjV1huWWVYa1luY0NNT3hlTVU1QmI2ZVZ3N2pkVFBISjBHS08zSEV1NWNYMGVGSXh0S3ZTQURjSkdzWWJsRE5sTjg3cVpjdDUwSkxhQnR6WXlhOUdTNHc5YjBkazlmbnk1WXd4MFowT3hZYnZFUUU2dVVyWW1ET0IwbUtNeGNCbmlCc1dYOTFqSnhmNy9VTlc4JTNE
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000

