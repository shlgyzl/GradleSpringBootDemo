buildscript {
    repositories {
        mavenLocal()
        // 使用阿里巴巴仓库
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://mirrors.huaweicloud.com/repository/maven/' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url 'https://maven.aliyun.com/repository/spring' }
        maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/releases' }
        maven { url 'https://maven.aliyun.com/repository/snapshots' }
        maven { url 'https://maven.aliyun.com/repository/grails-core' }
        maven { url 'https://maven.aliyun.com/repository/mapr-public' }
    }
    dependencies {

    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id "io.spring.dependency-management" version "1.0.8.RELEASE"
    id "org.zeroturnaround.gradle.jrebel" version "1.1.9"
    id "org.liquibase.gradle" version "2.0.1"
}


apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.zeroturnaround.gradle.jrebel'
apply plugin: 'eclipse'


//QueryDSL
def generatedSrcDir = 'src/main/generate-sources'
def generatedTestDir = 'src/test/generate-sources'

idea {
    module {
        sourceDirs += file(generatedSrcDir)
        testSourceDirs += file(generatedTestDir)
        downloadJavadoc = true
        downloadSources = true
    }
}
configurations.all() {
    Configuration configuration ->
        // 遇到冲突则停止构建
        configuration.resolutionStrategy.failOnVersionConflict()
        configuration.resolutionStrategy.force(['org.javassist:javassist:3.24.0-GA'])
        configuration.resolutionStrategy.force(['com.google.guava:guava:26.0-jre'])
        configuration.resolutionStrategy.force(['com.google.code.findbugs:jsr305:3.0.2'])
        configuration.resolutionStrategy.force(['org.hdrhistogram:HdrHistogram:2.1.1'])
        configuration.resolutionStrategy.force(['com.netflix.archaius:archaius-core:0.7.6'])
        configuration.resolutionStrategy.force(['io.github.openfeign:feign-core:10.4.0'])
        configuration.resolutionStrategy.force(['commons-logging:commons-logging:1.2'])

        //或者这样写
        //resolutionStrategy.setForcedModules(['org.slf4j:slf4j-api:1.6.1'])
}
compileJava {
    println "运行JAVA,$buildDir->"
    file(generatedSrcDir).mkdirs()
    options.compilerArgs << '-processor' <<
            'com.querydsl.apt.jpa.JPAAnnotationProcessor,' +
            'lombok.launch.AnnotationProcessorHider$AnnotationProcessor,' +
            'org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor' << '-s' << file(generatedSrcDir).absolutePath
}
compileTestJava {
    file(generatedTestDir).mkdirs()
    options.compilerArgs << '-processor' <<
            'com.querydsl.apt.jpa.JPAAnnotationProcessor,' +
            'lombok.launch.AnnotationProcessorHider$AnnotationProcessor,' +
            'org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor' << '-s' << file(generatedTestDir).absolutePath
}

clean {
    delete generatedSrcDir
    delete generatedTestDir
}

group 'com.gradle.cn'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8
targetCompatibility = 1.8

repositories {
    mavenLocal()
    // 使用阿里巴巴仓库
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
    maven { url 'https://mirrors.huaweicloud.com/repository/maven/' }
    maven { url 'https://maven.aliyun.com/repository/google' }
    maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    maven { url 'https://maven.aliyun.com/repository/jcenter' }
    maven { url 'https://maven.aliyun.com/repository/spring' }
    maven { url 'https://maven.aliyun.com/repository/spring-plugin' }
    maven { url 'https://maven.aliyun.com/repository/public' }
    maven { url 'https://maven.aliyun.com/repository/releases' }
    maven { url 'https://maven.aliyun.com/repository/snapshots' }
    maven { url 'https://maven.aliyun.com/repository/grails-core' }
    maven { url 'https://maven.aliyun.com/repository/mapr-public' }
}

dependencies {
    // 引入libs目录下的所有jar包作为依赖
    compile fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.springframework.boot:spring-boot-loader-tools"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    //compile "org.springframework.boot:spring-boot-starter-activemq"
    implementation "org.springframework.boot:spring-boot-starter-amqp"
    implementation "org.springframework.boot:spring-boot-starter-test"
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "org.springframework.boot:spring-boot-starter-quartz"
    //implementation "org.springframework.boot:spring-boot-starter-hateoas"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-websocket"
    implementation group: 'org.springframework.security', name: 'spring-security-messaging', version: '5.3.1.RELEASE'

    // 引入SpringBootAdmin监控系统
    compile group: 'de.codecentric', name: 'spring-boot-admin-starter-client', version: '2.2.1'
    // 引入Alibaba-Sentinel监控系统
    implementation 'com.alibaba.cloud:spring-cloud-starter-alibaba-sentinel:2.2.0.RELEASE'
    implementation 'com.alibaba.csp:sentinel-transport-simple-http:1.7.1'
    runtime group: 'org.springframework.cloud', name: 'spring-cloud-dependencies', version: 'Finchley.M9', ext: 'pom'
    // 引入feign进行远程API调用
    // https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-starter-openfeign
    implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '2.2.0.RELEASE'

    implementation group: 'io.github.openfeign', name: 'feign-gson', version: '10.0.0'
    implementation group: 'io.github.openfeign', name: 'feign-jackson', version: '10.0.0'

    // 引入号称最快的数据库连接池HikariCP
    compile group: 'com.zaxxer', name: 'HikariCP', version: '3.4.1'
    // 引入dbcp2数据源
    compile group: 'org.apache.commons', name: 'commons-dbcp2', version: '2.7.0'
    // 引入dbcp数据源
    compile group: 'commons-dbcp', name: 'commons-dbcp', version: '1.4'
    // 引入tomcat-jdbc数据源
    compile group: 'org.apache.tomcat', name: 'tomcat-jdbc', version: '9.0.27'
    // 引入druid数据源,自定义第三方数据源并配置
    compile group: 'com.alibaba', name: 'druid', version: '1.1.20'
    // 引入API接口文档UI用于网页展示
    compile(group: 'io.springfox', name: 'springfox-swagger-ui', version: '2.9.2') {
        exclude group: 'io.swagger', module: 'swagger-annotations'
        exclude group: 'io.swagger', module: 'swagger-models'
    }
    // 引入API接口文档用于传输API信息
    compile(group: 'io.springfox', name: 'springfox-swagger2', version: '2.9.2') {
        exclude group: 'io.swagger', module: 'swagger-annotations'
        exclude group: 'io.swagger', module: 'swagger-models'
    }
    // 用于解决访问swagger2静态页面失败问题
    compile("io.swagger:swagger-annotations:1.5.21")
    compile("io.swagger:swagger-models:1.5.21")
    // 引入mongodb实体注解配合queryDSL(google扫描)
    compile group: 'com.google.code', name: 'morphia', version: '0.91'
    // 用于LocalDateTime转Instant类型或反转
    compile group: 'org.joda', name: 'joda-convert', version: '2.2.1'
    // 加入时间工具类
    compile group: 'joda-time', name: 'joda-time', version: '2.10.5'
    // 引入时间前端展示转换器
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.10.1'
    // 引入hsqldb驱动
    compile group: 'org.hsqldb', name: 'hsqldb', version: '2.5.0'
    // 解决静态页面访问问题
    compile group: 'com.google.guava', name: 'guava', version: '26.0-jre'
    // 引入liquibase数据库版本和迁移工具
    compile group: 'org.liquibase', name: 'liquibase-core', version: '3.8.0'
    // 引入H2database数据库方便开发测试
    compile group: 'com.h2database', name: 'h2', version: '1.4.200'
    // 引入Sql格式化工具
    compile group: 'org.bgee.log4jdbc-log4j2', name: 'log4jdbc-log4j2-jdbc4.1', version: '1.16'
    // 引入MySQL驱动
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.38'
    compile group: 'com.google.code.morphia', name: 'morphia', version: '0.104'
    // 引入mongodb注解驱动
    compileOnly group: 'org.mongodb.morphia', name: 'morphia', version: '1.3.2'
    // 引入Lombok注解驱动器
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
    // 引入QueryDsl注解驱动器
    compileOnly group: 'com.querydsl', name: 'querydsl-apt', version: '4.2.1'
    compile group: 'io.github.jhipster', name: 'jhipster-framework', version: '3.1.0'
    // fastjson引用
    compile group: 'com.alibaba', name: 'fastjson', version: '1.2.68'
    // 各种打包模块集合
    compile group: 'cn.hutool', name: 'hutool-all', version: '5.2.5'
    // 引入JPA注解驱动器
    //compileOnly group: 'javax.annotation', name: 'javax.annotation-api', version: '1.3.2'
    //annotationProcessor 'javax.annotation:javax.annotation-api:1.3.2'

    compile(group: 'com.querydsl', name: 'querydsl-jpa', version: '4.2.1') {
        exclude module: 'javassist'
    }
    compile group: 'com.querydsl', name: 'querydsl-mongodb', version: '4.2.1'
    compile "io.jsonwebtoken:jjwt-api:0.11.0"
    compile "org.apache.commons:commons-lang3:3.9"
    //compile group: 'org.zalando', name: 'problem-spring-web', version: '0.25.2'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf', version: '2.2.0.RELEASE'
    compile group: 'org.thymeleaf.extras', name: 'thymeleaf-extras-springsecurity5', version: '3.0.4.RELEASE'
    compile group: 'io.github.jpenren', name: 'thymeleaf-spring-data-dialect', version: '3.4.1'
    runtime "io.jsonwebtoken:jjwt-impl:0.11.0"
    runtime "io.jsonwebtoken:jjwt-jackson:0.11.0"
    // 引入嵌入式容器Tomcat
    implementation 'org.springframework.boot:spring-boot-starter-web'

    testCompile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
    // 引入测试单元
    testCompile group: 'junit', name: 'junit', version: '4.12'
    // 引入Lombok测试依赖
    testCompile 'org.projectlombok:lombok:1.18.10'

    // 引入编译注解执行器,不引入注解执行器那么将会出现无法解析注解的问题


    annotationProcessor 'com.querydsl:querydsl-apt:4.2.1'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    annotationProcessor 'org.springframework.boot:spring-boot-starter-data-jpa:2.2.0.RELEASE'
    annotationProcessor 'org.springframework.boot:spring-boot-starter-data-mongodb:2.2.0.RELEASE'

    // 引入测试注解执行器
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
    testAnnotationProcessor 'com.querydsl:querydsl-apt:4.2.1'
    testAnnotationProcessor 'org.springframework.boot:spring-boot-starter-data-jpa:2.2.0.RELEASE'
    testAnnotationProcessor 'org.springframework.boot:spring-boot-starter-data-mongodb:2.2.0.RELEASE'

    //liquibaseRuntime 'org.liquibase:liquibase-core:3.8.0'
    //liquibaseRuntime sourceSets.main.compileClasspath
    //liquibaseRuntime 'com.h2database:h2:1.4.200'
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}
