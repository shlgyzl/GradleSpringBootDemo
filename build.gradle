buildscript {
    ext {
        springBootVersion = "2.3.1.RELEASE"
    }
    repositories {
        mavenLocal()
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "java"
    id "idea"
    id "maven-publish"
    id "jacoco"
}

repositories {
    mavenLocal()
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
    maven { url "https://maven.aliyun.com/repository/gradle-plugin" }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: 'maven'
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"


group "com.gradle.cn"
version "1.0-SNAPSHOT"
description = "超级功能项目"

sourceCompatibility = 1.8 // 编译时指定的JDK版本
targetCompatibility = 1.8 // 生成字节码时指定的JDK版本(一般不会小于编译时,如果小于则需要使用jack工具链)
assert System.properties["java.specification.version"] == "1.8"// 判断开发者是否使用JDK1.8,不是则构建失败

ext {
    set('springBootAdminVersion', "2.2.3")
    set('springCloudVersion', "Hoxton.SR5")
    set('jhipsterDependenciesVersion', "3.8.0")
    set('querydslVersion', "4.3.1")
    set('mapstructVersion', "1.3.1.Final")
    generatedSrc = file("${buildDir}/generated/sources/annotationProcessor/java/main")
    generatedTestSrc = file("${buildDir}/generated/sources/annotationProcessor/java/test")
}

compileJava {
    println "启用多级注解处理器,代码自动生成路径:\n${generatedSrc}"
    options.compilerArgs <<
            '-processor' << 'com.querydsl.apt.jpa.JPAAnnotationProcessor,' +
            'org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor,' +
            'lombok.launch.AnnotationProcessorHider$AnnotationProcessor,' +
            'org.mapstruct.ap.MappingProcessor,' +
            'org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor,' +
            'org.springframework.boot.configurationprocessor.ConfigurationMetadataAnnotationProcessor' <<
            '-s' << file("${generatedSrc}").absolutePath
}

compileTestJava {
    println "启用多级注解处理器,代码自动生成路径:\n${generatedTestSrc}"
    options.compilerArgs <<
            '-processor' << 'com.querydsl.apt.jpa.JPAAnnotationProcessor,' +
            'org.hibernate.jpamodelgen.JPAMetaModelEntityProcessor,' +
            'lombok.launch.AnnotationProcessorHider$AnnotationProcessor,' +
            'org.mapstruct.ap.MappingProcessor,' +
            'org.springframework.data.mongodb.repository.support.MongoAnnotationProcessor,' +
            'org.springframework.boot.configurationprocessor.ConfigurationMetadataAnnotationProcessor' <<
            '-s' << file("${generatedTestSrc}").absolutePath
}


tasks.withType(Javadoc) {
    options.addStringOption('Xdoclint:none', '-quiet')
    options.addStringOption('encoding', 'UTF-8')
    options.addStringOption('charSet', 'UTF-8')
}

tasks.withType(JavaCompile) {
    sourceCompatibility = "1.8"
    targetCompatibility = "1.8"
    options.deprecation = true
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked"
}

configurations {
    configuration.resolutionStrategy.failOnVersionConflict()
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

idea {
    module {
        sourceDirs += file("${generatedSrc}")
        testSourceDirs += file("${generatedTestSrc}")
        downloadSources = true
        downloadJavadoc = true
    }
}

sourceSets {
    main {
        java {
            srcDir "${generatedSrc}"
        }
    }
    test {
        java {
            srcDir "${generatedTestSrc}"
        }
    }
}

dependencyManagement {
    imports {
        mavenBom "de.codecentric:spring-boot-admin-dependencies:${springBootAdminVersion}"
    }
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


dependencies {
    implementation "org.springframework.boot:spring-boot-loader-tools"
    implementation "org.springframework.boot:spring-boot-loader-tools"
    implementation "org.springframework.boot:spring-boot-starter-mail"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-aop"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-data-mongodb"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"
    implementation "org.springframework.boot:spring-boot-starter-activemq"
    implementation "org.springframework.boot:spring-boot-starter-amqp"
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "org.springframework.boot:spring-boot-starter-quartz"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-websocket"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    //implementation "org.springframework.boot:spring-boot-starter-hateoas"
    implementation "org.springframework.boot:spring-boot-starter-validation"

    implementation "org.springframework.security:spring-security-messaging:5.3.1.RELEASE"
    developmentOnly "org.springframework.boot:spring-boot-devtools"

    implementation "de.codecentric:spring-boot-admin-starter-server"
    implementation "de.codecentric:spring-boot-admin-server-ui"
    implementation "io.github.jhipster:jhipster-framework:${jhipsterDependenciesVersion}"
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    implementation "mysql:mysql-connector-java"
    implementation "com.microsoft.sqlserver:mssql-jdbc"
    implementation "com.oracle.ojdbc:ojdbc8"
    implementation "org.liquibase:liquibase-core"
    implementation "org.apache.commons:commons-lang3"
    implementation "cn.hutool:hutool-all:5.2.5"
    implementation "org.joda:joda-convert:2.2.1"
    implementation "joda-time:joda-time:2.10.5"
    implementation "io.jsonwebtoken:jjwt-impl:0.11.0"
    implementation "io.jsonwebtoken:jjwt-jackson:0.11.0"
    implementation "io.jsonwebtoken:jjwt-api:0.11.0"
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:2.2.0.RELEASE"
    implementation "io.github.openfeign:feign-gson:10.0.0"
    implementation "io.github.openfeign:feign-jackson:10.0.0"
    implementation "org.apache.commons:commons-pool2:2.8.0"

//    implementation "org.ehcache:ehcache:3.8.1"
//    implementation "net.sf.ehcache:ehcache:2.10.6"
//    implementation "javax.cache:cache-api:1.1.1"
    //implementation "com.alicp.jetcache:jetcache-starter-redis:2.6.0"
    implementation("io.springfox:springfox-swagger2:2.9.2") {
        exclude group: "io.swagger", module: "swagger-annotations"
        exclude group: "io.swagger", module: "swagger-models"
    }
    implementation("io.springfox:springfox-bean-validators:2.9.2") {
        exclude group: "org.springframework.plugin", module: "spring-plugin-core"
    }
    implementation("io.springfox:springfox-schema:2.9.2") {
        exclude group: "com.google.guava", module: "com.google.guava"
    }
    // 用于解决访问swagger2静态页面失败问题
    implementation("io.swagger:swagger-annotations:1.5.21")
    implementation("io.swagger:swagger-models:1.5.21")
    implementation "com.github.xiaoymin:knife4j-spring-boot-starter:2.0.3"
    // 解决静态页面访问问题
    implementation "com.google.guava:guava:29.0-jre"

    // 引入性能监控工具
    implementation "io.dropwizard.metrics:metrics-core:4.1.9"
    implementation "io.dropwizard.metrics:metrics-healthchecks:4.1.9"

    implementation "com.mchange:c3p0:0.9.5.5"

    // jackson 序列化问题
    implementation  "com.fasterxml.jackson.module:jackson-module-parameter-names:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate5:2.11.1"
    //implementation "com.fasterxml.jackson.datatype:jackson-datatype-hibernate4:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.11.1"
    //implementation "com.fasterxml.jackson.datatype:jackson-datatype-jdk7:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-guava:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda-money:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr353:2.11.1"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-hppc:2.11.1"
    //implementation "com.fasterxml.jackson.datatype:jackson-datatype-pcollecions:2.11.1"
    //implementation "com.fasterxml.jackson.datatype:jackson-datatype-jars:2.11.1"
    implementation "org.glassfish:javax.json:1.1.4"



    compileOnly "org.projectlombok:lombok"
    implementation "com.querydsl:querydsl-core:${querydslVersion}"
    implementation "com.querydsl:querydsl-jpa:${querydslVersion}"
    implementation "com.querydsl:querydsl-apt:${querydslVersion}"
    implementation "com.querydsl:querydsl-mongodb:${querydslVersion}"


    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.hibernate:hibernate-jpamodelgen"
    annotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jpa"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    annotationProcessor "org.springframework.boot:spring-boot-starter-data-jpa"
    annotationProcessor "org.springframework.boot:spring-boot-starter-data-mongodb"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testAnnotationProcessor "org.projectlombok:lombok"
    testAnnotationProcessor "org.hibernate:hibernate-jpamodelgen"
    testAnnotationProcessor "com.querydsl:querydsl-apt:${querydslVersion}:jpa"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.springframework.boot:spring-boot-starter-data-jpa"
    testAnnotationProcessor "org.springframework.boot:spring-boot-starter-data-mongodb"
    testAnnotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    testImplementation "com.h2database:h2"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "org.junit.vintage', module: 'junit-vintage-engine"
    }

    testImplementation "io.github.swagger2markup:swagger2markup:1.3.3"
    testImplementation "io.github.swagger2markup:swagger2markup-spring-restdocs-ext:1.3.3"
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

}